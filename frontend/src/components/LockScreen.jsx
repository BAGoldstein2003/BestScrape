import {useEffect, useState} from 'react'
import './LockScreen.css'
import emailjs from '@emailjs/browser';


export default function LockScreen({setIsLocal}) {
    const [attemptedPassword, setAttemptedPassword] = useState('');
    const [randomPassword, setRandomPassword] = useState('');
    const [email, setEmail] = useState('');

    const handleAttemptChange = (e) => {
        setAttemptedPassword(e.target.value)
    }

    const handleEmailChange = (e) => {
      setEmail(e.target.value)
    }

    const isValidEmail = (email) => {
      if (!email) {
        return false;
      }
      if (/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email) && 8 <= email.length <= 30) {
        return true;
      }
    }

    //get random password already generated by the browser and set state, otherwise set to ''
    useState(() => {
      setRandomPassword(() => {
        const localOTP = localStorage.getItem('OTP')
        return localOTP ? localOTP : ''
      })
    }, [setRandomPassword])

    const handleAttemptFinish = (e) => {
      //DEBUG: DELETE
      if (e.key === 'Enter') {
        console.log('attempt:', attemptedPassword)
        console.log('actual:', randomPassword)
        console.log('matches:', attemptedPassword.toUpperCase() === randomPassword)
      }
      //if valid submission, grant access
        if (e.key === 'Enter' && attemptedPassword.toUpperCase() === randomPassword) {
          setIsLocal(true)
        }
    }

    const oneTimePassword = (e) => {
      if (e.key === "Enter" && randomPassword === '' && isValidEmail(email)) {
        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
        let password = '';
        for (let i = 0; i < 6; i++) {
          password = password + chars.charAt(Math.floor(Math.random() * chars.length));
        }
        setRandomPassword(password)
        localStorage.setItem('OTP', password)
        const emailParams = {
          OTP: password,
          to_email: email
        }
        emailjs.send(
          'bestscrapeotp', 
          'template_o3hl8ze',    
          emailParams,
          'Hr59z37C7JXW3Ecf3'
          )
        .then((result) => {
          console.log('OTP sent successfully:', result.text);
        })
        .catch((error) => {
          console.error('Email send failed:', error.text);
        })
      }
    }

    return (
        <div className="ls-background">
            <h1 className="text">Enter your email and hit enter to receive a One-Time Password. We do not store your Email for this step.</h1>
            <input  className="text-input" onChange={handleEmailChange} onKeyDown={oneTimePassword} value={email} type='text'></input>
            
            <h1 className="text">Please enter the password provided by the developer and hit enter to be granted access</h1>
                        <h4 className={`text ${randomPassword === '' ? 'inactive' : 'active'}`} >Seems like you have already recieved a One-Time-Password. Please check your email, or send another verification code</h4>
            <input className="text-input" onChange={handleAttemptChange} value={attemptedPassword} onKeyDown={handleAttemptFinish}></input>
        </div>
    )
}

const TypingEffect = ({ text, speed = 100 }) => {
  const [displayedText, setDisplayedText] = useState("");

  useEffect(() => {
    let index = 0;
    const interval = setInterval(() => {
      if (index < text.length - 1) {
        setDisplayedText((prev) => prev + text[index]);
        index++;
      } else {
        clearInterval(interval);
      }
    }, speed);

    return () => clearInterval(interval);
  }, [text, speed]);

  return <h1 style={{textAlign: 'center'}}>{displayedText}</h1>;
}